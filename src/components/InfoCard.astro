---

export interface props {
    title: string;
    text: string;
    src: string;
    delay: number;
    href: string;
    imageUrl: string;
}

const {title, text, src, delay, href, imageUrl} = Astro.props;
---

<a href={href} class=`info-card flex flex-col items-center text-center my-4 h-auto w-3/4 bg-slate-200 rounded-lg p-8 opacity-0 transition-all transform ease-out delay-${delay} duration-1000 translate-y-10 hover:bg-wb-pale-peach md:w-72 md:h-148 overflow-auto md:mx-4`>
    <div class="w-16 h-16 rounded-full overflow-auto mb-4">
        <img src={imageUrl} alt="related image" class="w-full h-full object-cover"/>
    </div>
    <h1 class="font-semibold mb-4">{title}</h1>
    <p>
        {text}
    </p>
    <script>
        document.addEventListener("DOMContentLoaded", function() {
            const infoCards = document.getElementsByClassName("info-card");

            for (let i = 0; i < infoCards.length; i++)
            {
                const top = infoCards[i].getBoundingClientRect().top;

                if (top <= window.innerHeight) {
                    infoCards[i].classList.remove("opacity-0", "translate-y-10");
                    infoCards[i].classList.add("opacity-100", "translate-y-0");
                }
            }

        });

        window.addEventListener("scroll", function() {
            const infoCards = document.getElementsByClassName("info-card");

            for (let i = 0; i < infoCards.length; i++){
                const top = infoCards[i].getBoundingClientRect().top;

                if (top <= window.innerHeight + 200) {
                    infoCards[i].classList.remove("opacity-0", "translate-y-10");
                    infoCards[i].classList.add("opacity-100", "translate-y-0");
                }
            }
        })
    </script>
</a>